# Use container system
sudo: false

# Cache OpenSSL build
cache:
  directories:
# TODO: Re-enable once we figured out why this happens:
#       https://s3.amazonaws.com/archive.travis-ci.org/jobs/213620911/log.txt
#  - $HOME/build/rawrtc/rawrtc/build/dependencies/openssl
#  - $HOME/build/rawrtc/rawrtc/build/prefix/lib

# Build matrix
language: c
matrix:
  include:
#    - os: linux
#      dist: trusty
#      compiler: gcc
# TODO: Re-enable once trusty upgraded to OpenSSL >= 1.0.2
#    - os: linux
#      dist: trusty
#      compiler: gcc
#      env: ENFORCE_OPENSSL=1
#    - os: linux
#      dist: trusty
#      compiler: clang
# TODO: Re-enable once trusty upgraded to OpenSSL >= 1.0.2
#    - os: linux
#      dist: trusty
#      compiler: clang
#      env: ENFORCE_OPENSSL=1
# TODO: Re-enable once https://github.com/NEAT-project/usrsctp-neat/issues/6 has been resolved
#    - os: linux
#      dist: precise
#      compiler: gcc
# TODO: Re-enable once precise upgraded to OpenSSL >= 1.0.2
#    - os: linux
#      dist: precise
#      compiler: gcc
#      env: ENFORCE_OPENSSL=1
# TODO: Re-enable once https://github.com/NEAT-project/usrsctp-neat/issues/6 has been resolved
#    - os: linux
#      dist: precise
#      compiler: clang
# TODO: Re-enable once precise upgraded to OpenSSL >= 1.0.2
#    - os: linux
#      dist: precise
#      compiler: clang
#      env: ENFORCE_OPENSSL=1
# TODO: Re-enable once OSX errors have been resolved:
    - os: osx
      compiler: gcc
#    - os: osx
#      compiler: gcc
#      env: ENFORCE_OPENSSL=1
#    - os: osx
#      compiler: clang
#    - os: osx
#      compiler: clang
#      env: ENFORCE_OPENSSL=1

# Linux dependencies
addons:
  apt:
    packages:
    - git
    - pkg-config
    - libssl-dev

# OSX dependencies
before_install:
  - >
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update || travis_terminate 1;
      brew install --force openssl || travis_terminate 1;
      export PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}
    fi

# Make library dependencies
install:
  - ./make-dependencies.sh

# Set environment vars
before_script:
  - export BUILD_PATH=$HOME/build/rawrtc/rawrtc/build
  - export PKG_CONFIG_PATH=${BUILD_PATH}/prefix/lib/pkgconfig:${PKG_CONFIG_PATH}
  - export LD_LIBRARY_PATH=${BUILD_PATH}/prefix/lib:${LD_LIBRARY_PATH}
  - export PATH=${BUILD_PATH}/prefix/bin:${PATH}

# Install library and run tests
# TODO: Treat warnings as errors
script:
  - cd build
  - >
    cmake
    -DCMAKE_INSTALL_PREFIX=${BUILD_PATH}/prefix
    -DCMAKE_C_FLAGS="-Werror -Wall -Wno-unused-function"
    .. && make install
  - "echo TODO: make test"
#  - make test
